// <auto-generated />
using System;
using Final_Nba_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Final_Nba_API.Migrations
{
    [DbContext(typeof(NbaDbContext))]
    [Migration("20200305145931_retired-dates-fixed")]
    partial class retireddatesfixed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Final_Nba_API.Models.CurrentPlayer", b =>
                {
                    b.Property<int>("CurrentPlayerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CurrentPlayerDOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentPlayerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentPlayerPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NbaTeamID")
                        .HasColumnType("int");

                    b.HasKey("CurrentPlayerID");

                    b.HasIndex("NbaTeamID");

                    b.ToTable("CurrentPlayers");

                    b.HasData(
                        new
                        {
                            CurrentPlayerID = 1,
                            CurrentPlayerDOB = new DateTime(1984, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentPlayerName = "LeBron James",
                            CurrentPlayerPosition = "Small Forward",
                            NbaTeamID = 1
                        },
                        new
                        {
                            CurrentPlayerID = 2,
                            CurrentPlayerDOB = new DateTime(2000, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentPlayerName = "Tyler Herro",
                            CurrentPlayerPosition = "Shooting Guard",
                            NbaTeamID = 2
                        },
                        new
                        {
                            CurrentPlayerID = 3,
                            CurrentPlayerDOB = new DateTime(1999, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentPlayerName = "Luka Doncic",
                            CurrentPlayerPosition = "Small Forward",
                            NbaTeamID = 3
                        },
                        new
                        {
                            CurrentPlayerID = 4,
                            CurrentPlayerDOB = new DateTime(1990, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentPlayerName = "Damian Lillard",
                            CurrentPlayerPosition = "Point Guard",
                            NbaTeamID = 4
                        },
                        new
                        {
                            CurrentPlayerID = 5,
                            CurrentPlayerDOB = new DateTime(1994, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentPlayerName = "Giannis Antetokounmpo",
                            CurrentPlayerPosition = "Power Forward",
                            NbaTeamID = 5
                        });
                });

            modelBuilder.Entity("Final_Nba_API.Models.HistoricPlayer", b =>
                {
                    b.Property<int>("HistoricPlayerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("HistoricPlayerDOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("HistoricPlayerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HistoricPlayerPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NbaTeamID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlayerRetired")
                        .HasColumnType("datetime2");

                    b.HasKey("HistoricPlayerID");

                    b.HasIndex("NbaTeamID");

                    b.ToTable("HistoricPlayers");

                    b.HasData(
                        new
                        {
                            HistoricPlayerID = 1,
                            HistoricPlayerDOB = new DateTime(1938, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HistoricPlayerName = "Jerry West",
                            HistoricPlayerPosition = "Point Guard",
                            NbaTeamID = 1,
                            PlayerRetired = new DateTime(1974, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            HistoricPlayerID = 2,
                            HistoricPlayerDOB = new DateTime(1982, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HistoricPlayerName = "Dwayne Wade",
                            HistoricPlayerPosition = "Shooting Guard",
                            NbaTeamID = 2,
                            PlayerRetired = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            HistoricPlayerID = 3,
                            HistoricPlayerDOB = new DateTime(1978, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HistoricPlayerName = "Dirk Nowitzki",
                            HistoricPlayerPosition = "Centre",
                            NbaTeamID = 3,
                            PlayerRetired = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            HistoricPlayerID = 4,
                            HistoricPlayerDOB = new DateTime(1962, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HistoricPlayerName = "Clyde Drexler",
                            HistoricPlayerPosition = "Small Forward",
                            NbaTeamID = 4,
                            PlayerRetired = new DateTime(1998, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            HistoricPlayerID = 5,
                            HistoricPlayerDOB = new DateTime(1947, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HistoricPlayerName = "Karim Abdul-Jabbar",
                            HistoricPlayerPosition = "Centre",
                            NbaTeamID = 5,
                            PlayerRetired = new DateTime(1989, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Final_Nba_API.Models.NbaTeam", b =>
                {
                    b.Property<int>("NbaTeamID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NbaTeamConference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NbaTeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("NbaTeamID");

                    b.ToTable("NbaTeams");

                    b.HasData(
                        new
                        {
                            NbaTeamID = 1,
                            NbaTeamConference = "West",
                            NbaTeamName = "LA Lakers"
                        },
                        new
                        {
                            NbaTeamID = 2,
                            NbaTeamConference = "East",
                            NbaTeamName = "Miami Heat"
                        },
                        new
                        {
                            NbaTeamID = 3,
                            NbaTeamConference = "West",
                            NbaTeamName = "Dallas Mavericks"
                        },
                        new
                        {
                            NbaTeamID = 4,
                            NbaTeamConference = "West",
                            NbaTeamName = "Portland Trailblazers"
                        },
                        new
                        {
                            NbaTeamID = 5,
                            NbaTeamConference = "East",
                            NbaTeamName = "Milwaukee Bucks"
                        });
                });

            modelBuilder.Entity("Final_Nba_API.Models.CurrentPlayer", b =>
                {
                    b.HasOne("Final_Nba_API.Models.NbaTeam", "NbaTeam")
                        .WithMany()
                        .HasForeignKey("NbaTeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Final_Nba_API.Models.HistoricPlayer", b =>
                {
                    b.HasOne("Final_Nba_API.Models.NbaTeam", "NbaTeam")
                        .WithMany()
                        .HasForeignKey("NbaTeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
